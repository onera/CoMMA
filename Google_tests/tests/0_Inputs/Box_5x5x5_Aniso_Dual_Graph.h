//
// Created by Nicolas Lantos on 03/04/2021.
//

#ifndef COMMA_PROJECT_BOX_FIVEXFIVEXFIVE_ANISO_DUAL_GRAPH_H
#define COMMA_PROJECT_BOX_FIVEXFIVEXFIVE_ANISO_DUAL_GRAPH_H

#include "gtest/gtest.h"
#include "../../../CoMMA_lib/Dual_Graph.h"

class Box_5x5x5_Aniso_Dual_Graph : public ::testing::Test {
    //box_2_rects_5_d_F.hdf

protected:

    Dual_Graph *g;
    int box_5x5x5_number_of_cells;
    int box_5x5x5_number_of_anisotropic_compliant_fc;
    int box_5x5x5_col_ind_size;
    vector<long> v_box_5x5x5_row_ptr;
    vector<long> v_box_5x5x5_col_ind;
    vector<double> v_box_5x5x5_values;
    vector<double> v_box_5x5x5_volumes;
    unordered_set<long> box_5x5x5_s_anisotropic_compliant_cells;
    virtual void SetUp() {


        v_box_5x5x5_row_ptr = {0, 4, 9, 14, 18, 23, 29, 35, 40, 45, 51, 57, 62,
                               66, 71, 76, 80, 85, 91, 97, 102, 108, 114, 120, 126, 132,
                               138, 144, 150, 155, 161, 167, 172, 177, 183, 189, 194, 200, 206,
                               212, 218, 224, 230, 236, 242, 247, 253, 259, 264, 268, 273, 278,
                               282, 287, 293, 299, 304, 309, 315, 321, 326, 330, 335, 340, 344};

        v_box_5x5x5_col_ind = {0, 1, 4, 16, 0, 1, 2, 5, 17, 1, 2, 3, 6, 18, 2, 3, 7,
                               19, 0, 4, 5, 8, 20, 1, 4, 5, 6, 9, 21, 2, 5, 6, 7, 10,
                               22, 3, 6, 7, 11, 23, 4, 8, 9, 12, 24, 5, 8, 9, 10, 13, 25,
                               6, 9, 10, 11, 14, 26, 7, 10, 11, 15, 27, 8, 12, 13, 28, 9, 12,
                               13, 14, 29, 10, 13, 14, 15, 30, 11, 14, 15, 31, 0, 16, 17, 20, 32,
                               1, 16, 17, 18, 21, 33, 2, 17, 18, 19, 22, 34, 3, 18, 19, 23, 35,
                               4, 16, 20, 21, 24, 36, 5, 17, 20, 22, 25, 37, 6, 18, 21, 23, 26,
                               38, 7, 19, 22, 23, 27, 39, 8, 20, 24, 25, 28, 40, 9, 21, 24, 26,
                               29, 41, 10, 22, 25, 27, 30, 42, 11, 23, 26, 27, 31, 43, 12, 24, 28,
                               29, 44, 13, 25, 28, 29, 30, 45, 14, 26, 29, 30, 31, 46, 15, 27, 30,
                               31, 47, 16, 32, 33, 36, 48, 17, 32, 33, 34, 37, 49, 18, 33, 34, 35,
                               38, 50, 19, 34, 35, 39, 51, 20, 32, 36, 37, 40, 52, 21, 33, 36, 38,
                               41, 53, 22, 34, 37, 39, 42, 54, 23, 35, 38, 39, 43, 55, 24, 36, 40,
                               41, 44, 56, 25, 37, 40, 42, 45, 57, 26, 38, 41, 43, 46, 58, 27, 39,
                               42, 43, 47, 59, 28, 40, 44, 45, 60, 29, 41, 44, 45, 46, 61, 30, 42,
                               45, 46, 47, 62, 31, 43, 46, 47, 63, 32, 48, 49, 52, 33, 48, 49, 50,
                               53, 34, 49, 50, 51, 54, 35, 50, 51, 55, 36, 48, 52, 53, 56, 37, 49,
                               52, 53, 54, 57, 38, 50, 53, 54, 55, 58, 39, 51, 54, 55, 59, 40, 52,
                               56, 57, 60, 41, 53, 56, 57, 58, 61, 42, 54, 57, 58, 59, 62, 43, 55,
                               58, 59, 63, 44, 56, 60, 61, 45, 57, 60, 61, 62, 46, 58, 61, 62, 63,
                               47, 59, 62, 63};

        v_box_5x5x5_values = {30., 2.5, 2.5, 25., 2.5, 27.5, 2.5, 2.5, 25., 2.5, 27.5,
                              2.5, 2.5, 25., 2.5, 30., 2.5, 25., 2.5, 27.5, 2.5, 2.5,
                              25., 2.5, 2.5, 25., 2.5, 2.5, 25., 2.5, 2.5, 25., 2.5,
                              2.5, 25., 2.5, 2.5, 27.5, 2.5, 25., 2.5, 27.5, 2.5, 2.5,
                              25., 2.5, 2.5, 25., 2.5, 2.5, 25., 2.5, 2.5, 25., 2.5,
                              2.5, 25., 2.5, 2.5, 27.5, 2.5, 25., 2.5, 30., 2.5, 25.,
                              2.5, 2.5, 27.5, 2.5, 25., 2.5, 2.5, 27.5, 2.5, 25., 2.5,
                              2.5, 30., 25., 25., 5., 2.5, 2.5, 25., 25., 2.5, 2.5,
                              2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5,
                              5., 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5,
                              2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25.,
                              2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25.,
                              25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5,
                              25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 5., 2.5,
                              25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5,
                              2.5, 25., 25., 2.5, 2.5, 5., 25., 25., 5., 2.5, 2.5,
                              25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5,
                              2.5, 25., 25., 2.5, 5., 2.5, 25., 25., 2.5, 2.5, 2.5,
                              2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5,
                              2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5,
                              2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25., 25.,
                              2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25.,
                              25., 2.5, 5., 2.5, 25., 25., 2.5, 2.5, 2.5, 2.5, 25.,
                              25., 2.5, 2.5, 2.5, 2.5, 25., 25., 2.5, 2.5, 5., 25.,
                              25., 30., 2.5, 2.5, 25., 2.5, 27.5, 2.5, 2.5, 25., 2.5,
                              27.5, 2.5, 2.5, 25., 2.5, 30., 2.5, 25., 2.5, 27.5, 2.5,
                              2.5, 25., 2.5, 2.5, 25., 2.5, 2.5, 25., 2.5, 2.5, 25.,
                              2.5, 2.5, 25., 2.5, 2.5, 27.5, 2.5, 25., 2.5, 27.5, 2.5,
                              2.5, 25., 2.5, 2.5, 25., 2.5, 2.5, 25., 2.5, 2.5, 25.,
                              2.5, 2.5, 25., 2.5, 2.5, 27.5, 2.5, 25., 2.5, 30., 2.5,
                              25., 2.5, 2.5, 27.5, 2.5, 25., 2.5, 2.5, 27.5, 2.5, 25.,
                              2.5, 2.5, 30.};

        box_5x5x5_number_of_cells = 64;
        box_5x5x5_col_ind_size = 344;

        v_box_5x5x5_volumes = {12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5,
                               12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5,
                               12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5,
                               12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5,
                               12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5,
                               12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5};

        int box_5x5x5_is_on_bnd[64] = {3, 2, 2, 3,
                                       2, 1, 1, 2,
                                       2, 1, 1, 2,
                                       3, 2, 2, 3,
                //
                                       2, 1, 1, 2,
                                       1, 0, 0, 1,
                                       1, 0, 0, 1,
                                       2, 1, 1, 2,
                //
                                       2, 1, 1, 2,
                                       1, 0, 0, 1,
                                       1, 0, 0, 1,
                                       2, 1, 1, 2,
                //
                                       3, 2, 2, 3,
                                       2, 1, 1, 2,
                                       2, 1, 1, 2,
                                       3, 2, 2, 3};

        box_5x5x5_number_of_anisotropic_compliant_fc = 64;
        box_5x5x5_s_anisotropic_compliant_cells = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                                                   10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                                                   20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
                                                   30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                                                   40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
                                                   50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
                                                   60, 61, 62, 63};

        unordered_map<long, int> box_5x5x5_d_is_on_bnd;
        for (int i = 0; i < box_5x5x5_number_of_cells; i++) {

            if (box_5x5x5_is_on_bnd[i] > 0) {
                box_5x5x5_d_is_on_bnd[i] = box_5x5x5_is_on_bnd[i];
            }

        }
        unordered_set<long> empty_set = unordered_set<long>({});
        g = new Dual_Graph(box_5x5x5_number_of_cells,
                           v_box_5x5x5_row_ptr,
                           v_box_5x5x5_col_ind,
                           v_box_5x5x5_values,
                           v_box_5x5x5_volumes,
                           box_5x5x5_d_is_on_bnd,
                           empty_set,
                           empty_set,
                           empty_set,
                           box_5x5x5_s_anisotropic_compliant_cells);

    }

    virtual void TearDown() {
        delete g;
//        delete v_box_5x5x5_row_ptr;
//        delete v_box_5x5x5_col_ind;
//        delete v_box_5x5x5_values;
    }
};

#endif //COMMA_PROJECT_BOX_FIVEXFIVEXFIVE_ANISO_DUAL_GRAPH_H

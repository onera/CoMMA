//
// Created by Nicolas Lantos on 03/04/2021.
//

#ifndef COMMA_PROJECT_TRICONNECTED_GRAPH_BUG_CUBE_H
#define COMMA_PROJECT_TRICONNECTED_GRAPH_BUG_CUBE_H

#include "gtest/gtest.h"
#include "../../../CoMMA_lib/Dual_Graph.h"

class Triconnected_graph_bug_cube : public ::testing::Test {

protected:
    Dual_Graph *dg;
    Triconnected_graph *g;
    int nb_nodes;
    int nb_edges;
    vector<long> v_row_ptr;
    vector<long> v_col_ind;
    vector<double> v_values;

    virtual void SetUp() {

        v_row_ptr = {0, 2, 6, 10, 13, 16, 18, 21, 26, 29, 32, 35, 39, 40, 42, 46, 48, 52, 55, 57, 60, 63, 67, 70, 74, 78, 81,
                     85, 89, 93, 96, 99, 102, 105, 107, 110, 113, 115, 118, 121};
        v_col_ind = {16, 13,  // 0
                     3, 26, 19, 4,  // 1
                     24, 34, 29, 22,  // 2
                     1, 20, 36,  // 3
                     1, 11, 21,  // 4 -16
                     16, 20,  // 5
                     33, 34, 14,
                     25, 31, 38, 30, 7,
                     10, 37, 14,
                     11, 20, 23,  // 9
                     16, 8, 15,
                     9, 35, 4, 12,
                     11,  // 12
                     0, 23,
                     8, 26, 21, 6,  // 14
                     32, 10,
                     0, 10, 5, 23,  // 16
                     24, 25, 30,
                     32, 27,
                     1, 28, 36,
                     9, 3, 5,  // 20
                     33, 4, 37, 14,
                     2, 38, 30,  // 70
                     16, 9, 35, 13,
                     17, 2, 27, 28,
                     17, 28, 7,
                     32, 1, 27, 14,  // 85
                     24, 18, 26, 34,
                     24, 25, 19, 31,  // 93
                     2, 38, 31,
                     17, 22, 7,  // 99
                     28, 29, 7,  // 102
                     18, 26, 15,
                     21, 6,
                     2, 27, 6,
                     11, 37, 23,  // 113
                     3, 19,
                     8, 35, 21,
                     29, 22, 7};

        v_values = {0.00236899, 0.00266174, 0.00251093, 0.00192734, 0.00244086, 0.00227483,
                    0.00216244, 0.00235186, 0.00182832, 0.00210366, 0.00251093, 0.00210384,
                    0.00228837, 0.00227483, 0.0025242, 0.00185692, 0.00223799, 0.00206494,
                    0.00342263, 0.00357438, 0.00344809, 0.00254951, 0.00254951, 0.00254951,
                    0.00254951, 0.01, 0.00255746, 0.00292719, 0.00240886, 0.00257893,
                    0.00201985, 0.00253665, 0.00184702, 0.00255746, 0.00242259, 0.00257893,
                    0.00326792, 0.0025242, 0.00296146, 0.00296146, 0.00266174, 0.00300467,
                    0.00240886, 0.00253077, 0.00318192, 0.00344809, 0.00234334, 0.00242259,
                    0.00236899, 0.00184702, 0.00223799, 0.00239284, 0.00200091, 0.00219202,
                    0.0022091, 0.00218439, 0.00309293, 0.00244086, 0.00212157, 0.0026124,
                    0.00201985, 0.00210384, 0.00206494, 0.00269438, 0.00185692, 0.00305496,
                    0.00318192, 0.00210366, 0.0022614, 0.00222133, 0.00239284, 0.00253665,
                    0.00311898, 0.00300467, 0.00200091, 0.00216244, 0.00222185, 0.00181064,
                    0.00219202, 0.00213931, 0.00254951, 0.00255815, 0.00192734, 0.00292526,
                    0.00253077, 0.00222185, 0.00309293, 0.00292526, 0.00442999, 0.00181064,
                    0.00213931, 0.00212157, 0.00208496, 0.00182832, 0.00212051, 0.00210185,
                    0.0022091, 0.00222133, 0.00254951, 0.00208496, 0.00210185, 0.00254951,
                    0.00218439, 0.00255815, 0.00234334, 0.00269438, 0.00342263, 0.00235186,
                    0.00442999, 0.00357438, 0.00326792, 0.00239968, 0.00311898, 0.00228837,
                    0.0026124, 0.00292719, 0.00239968, 0.00305496, 0.00212051, 0.0022614,
                    0.00254951};

        nb_nodes = 39;
        nb_edges = 60;

        g = new Triconnected_graph(v_row_ptr,
                                   v_col_ind,
                                   v_values);

        vector<double> v_volumes(nb_nodes, 1.0);
        unordered_map<long, int> d_is_on_bnd = {};
        dg = new Dual_Graph(nb_nodes,
                            v_row_ptr,
                            v_col_ind,
                            v_values,
                            v_volumes,
                            d_is_on_bnd
        );
    }

    virtual void TearDown() {
        delete g;
        delete dg;
    }
};

#endif //COMMA_PROJECT_TRICONNECTED_GRAPH_BUG_CUBE_H

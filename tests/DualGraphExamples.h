#ifndef COMMA_PROJECT_DUALGRAPHEXAMPLES_H
#define COMMA_PROJECT_DUALGRAPHEXAMPLES_H

/*
 * CoMMA
 *
 * Copyright Â© 2024 ONERA
 *
 * Authors: Nicolas Lantos, Alberto Remigi, and Riccardo Milani
 * Contributors: Karim Anemiche
 *
 * Any copyright is dedicated to the Public Domain.
 * https://creativecommons.org/publicdomain/zero/1.0/
 */

#include <memory>

#include "CoMMA/Agglomerator.h"
#include "CoMMA/CoMMA.h"
#include "CoMMA/CoMMADefs.h"

using DGEIndexT = comma::CoMMAIndexT;
using DGEIntT = comma::CoMMAIntT;
using DGEWeightT = comma::CoMMAWeightT;

class BaseDualGEx {
public:
  /** @brief Dimension */
  DGEIntT dim{};  // clang-tidy complains without {}
  /** @brief Number of fine cells */
  DGEIndexT nb_fc{};  // clang-tidy complains without {}
  /** @brief Indices of the CSR representation */
  std::vector<DGEIndexT> adjMatrix_row_ptr;
  /** @brief Values of the CSR representation */
  std::vector<DGEIndexT> adjMatrix_col_ind;
  /** @brief Weights of the CSR representation */
  std::vector<DGEWeightT> adjMatrix_areaValues;
  /** @brief Number of boundary faces per cell */
  std::vector<DGEIntT> n_bnd_faces;
  /** @brief Volumes of the cells */
  std::vector<DGEWeightT> volumes;
  /** @brief Centers of the cells */
  std::vector<std::vector<DGEWeightT>> centers;
  /** @brief Anisotropic compliant cells */
  std::vector<DGEIndexT> anisoCompliantCells;
  /** @brief Priority weights */
  std::vector<DGEWeightT> weights;

  BaseDualGEx() = default;

  BaseDualGEx(
    const std::vector<DGEIndexT> &adjMatrix_row_ptr,
    const std::vector<DGEIndexT> &adjMatrix_col_ind,
    const std::vector<DGEWeightT> &adjMatrix_areaValues,
    const std::vector<DGEIntT> &n_bnd_faces,
    const std::vector<DGEWeightT> &volumes,
    const std::vector<std::vector<DGEWeightT>> &centers
  ) :
      dim{},
      nb_fc{},
      adjMatrix_row_ptr(adjMatrix_row_ptr),
      adjMatrix_col_ind(adjMatrix_col_ind),
      adjMatrix_areaValues(adjMatrix_areaValues),
      n_bnd_faces(n_bnd_faces),
      volumes(volumes),
      centers(centers),
      anisoCompliantCells(n_bnd_faces.size()),
      weights(n_bnd_faces.size()) {
    dim = static_cast<DGEIntT>(centers[0].size());
    nb_fc = static_cast<DGEIndexT>(n_bnd_faces.size());
    for (DGEIndexT i = 0; i < this->nb_fc; i++) {
      anisoCompliantCells[i] = i;
      // Reversing the index so that the order reflects the numbering
      weights[i] = static_cast<DGEWeightT>(nb_fc - i);
    }
  }
};

class DualGEx : public BaseDualGEx {
public:
  DualGEx() :
      BaseDualGEx(
        // clang-format off
        /* row_ptr */ {0, 2,  5,  9, 13, 17, 21, 24, 28, 32, 35, 38, 41, 44, 46, 49, 52, 54, 56, 59, 62, 64},
        /* col_ind */ { 1,  9,  0,  2,  6,  1,  3,  5,  8,  2,  4,  7, 11,  3,  5, 12, 14,  2,  4,  6, 15,  1,  5, 16, 3,  8, 10, 19,  2,  7,  9, 18,  0,  8, 17,  7, 11, 20,  3, 10, 12,  4, 11, 13, 12, 14,  4, 13,15,  5, 14, 16,  6, 15,  9, 18,  8, 17, 19,  7, 18, 20, 10, 19},
        /* areas   */ {1.41421356, 1, 1, 1, 1 , 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
        /* n_bnd   */ {1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2},
        /* volumes */ {0.5, 0.5, 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 1,  1,  1},
        /* centers */ {{ 1./3.,  1./3.}, { 2./3.,  2./3.}, { 1.5,  0.5}, { 2.5,  0.5}, { 2.5,  1.5},
                       { 1.5,  1.5}, { 0.5,  1.5}, { 2.5, -0.5}, { 1.5, -0.5}, { 0.5, -0.5}, { 3.5, -0.5}, { 3.5,  0.5}, { 3.5,  1.5}, { 3.5,  2.5},
                       { 2.5,  2.5}, { 1.5,  2.5}, { 0.5,  2.5}, { 0.5, -1.5}, { 1.5, -1.5}, { 2.5, -1.5}, { 3.5, -1.5}}
        // clang-on
    ) {}
};

class DualGEx_aniso: public BaseDualGEx {
public:
    DualGEx_aniso() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 3, 7, 11, 15, 18, 22, 27, 32, 37, 41, 45, 50, 55, 60, 64, 68, 73, 78, 83, 87, 90, 94, 98, 102, 105, 109, 114, 119, 124, 128, 133, 139, 145, 151, 156, 161, 167, 173, 179, 184, 189, 195, 201, 207, 212, 216, 221, 226, 231, 235, 239, 244, 249, 254, 258, 263, 269, 275, 281, 286, 291, 297, 303, 309, 314, 319, 325, 331, 337, 342, 346, 351, 356, 361, 365, 369, 374, 379, 384, 388, 393, 399, 405, 411, 416, 421, 427, 433, 439, 444, 449, 455, 461, 467, 472, 476, 481, 486, 491, 495, 498, 502, 506, 510, 513, 517, 522, 527, 532, 536, 540, 545, 550, 555, 559, 563, 568, 573, 578, 582, 585, 589, 593, 597, 600},
      /* col_ind */ {1, 5, 25, 0, 2, 6, 26, 1, 3, 7, 27, 2, 4, 8, 28, 3, 9, 29, 0, 6, 10, 30, 1, 5, 7, 11, 31, 2, 6, 8, 12, 32, 3, 7, 9, 13, 33, 4, 8, 14, 34, 5, 11, 15, 35, 6, 10, 12, 16, 36, 7, 11, 13, 17, 37, 8, 12, 14, 18, 38, 9, 13, 19, 39, 10, 16, 20, 40, 11, 15, 17, 21, 41, 12, 16, 18, 22, 42, 13, 17, 19, 23, 43, 14, 18, 24, 44, 15, 21, 45, 16, 20, 22, 46, 17, 21, 23, 47, 18, 22, 24, 48, 19, 23, 49, 0, 26, 30, 50, 1, 25, 27, 31, 51, 2, 26, 28, 32, 52, 3, 27, 29, 33, 53, 4, 28, 34, 54, 5, 25, 31, 35, 55, 6, 26, 30, 32, 36, 56, 7, 27, 31, 33, 37, 57, 8, 28, 32, 34, 38, 58, 9, 29, 33, 39, 59, 10, 30, 36, 40, 60, 11, 31, 35, 37, 41, 61, 12, 32, 36, 38, 42, 62, 13, 33, 37, 39, 43, 63, 14, 34, 38, 44, 64, 15, 35, 41, 45, 65, 16, 36, 40, 42, 46, 66, 17, 37, 41, 43, 47, 67, 18, 38, 42, 44, 48, 68, 19, 39, 43, 49, 69, 20, 40, 46, 70, 21, 41, 45, 47, 71, 22, 42, 46, 48, 72, 23, 43, 47, 49, 73, 24, 44, 48, 74, 25, 51, 55, 75, 26, 50, 52, 56, 76, 27, 51, 53, 57, 77, 28, 52, 54, 58, 78, 29, 53, 59, 79, 30, 50, 56, 60, 80, 31, 51, 55, 57, 61, 81, 32, 52, 56, 58, 62, 82, 33, 53, 57, 59, 63, 83, 34, 54, 58, 64, 84, 35, 55, 61, 65, 85, 36, 56, 60, 62, 66, 86, 37, 57, 61, 63, 67, 87, 38, 58, 62, 64, 68, 88, 39, 59, 63, 69, 89, 40, 60, 66, 70, 90, 41, 61, 65, 67, 71, 91, 42, 62, 66, 68, 72, 92, 43, 63, 67, 69, 73, 93, 44, 64, 68, 74, 94, 45, 65, 71, 95, 46, 66, 70, 72, 96, 47, 67, 71, 73, 97, 48, 68, 72, 74, 98, 49, 69, 73, 99, 50, 76, 80, 100, 51, 75, 77, 81, 101, 52, 76, 78, 82, 102, 53, 77, 79, 83, 103, 54, 78, 84, 104, 55, 75, 81, 85, 105, 56, 76, 80, 82, 86, 106, 57, 77, 81, 83, 87, 107, 58, 78, 82, 84, 88, 108, 59, 79, 83, 89, 109, 60, 80, 86, 90, 110, 61, 81, 85, 87, 91, 111, 62, 82, 86, 88, 92, 112, 63, 83, 87, 89, 93, 113, 64, 84, 88, 94, 114, 65, 85, 91, 95, 115, 66, 86, 90, 92, 96, 116, 67, 87, 91, 93, 97, 117, 68, 88, 92, 94, 98, 118, 69, 89, 93, 99, 119, 70, 90, 96, 120, 71, 91, 95, 97, 121, 72, 92, 96, 98, 122, 73, 93, 97, 99, 123, 74, 94, 98, 124, 75, 101, 105, 76, 100, 102, 106, 77, 101, 103, 107, 78, 102, 104, 108, 79, 103, 109, 80, 100, 106, 110, 81, 101, 105, 107, 111, 82, 102, 106, 108, 112, 83, 103, 107, 109, 113, 84, 104, 108, 114, 85, 105, 111, 115, 86, 106, 110, 112, 116, 87, 107, 111, 113, 117, 88, 108, 112, 114, 118, 89, 109, 113, 119, 90, 110, 116, 120, 91, 111, 115, 117, 121, 92, 112, 116, 118, 122, 93, 113, 117, 119, 123, 94, 114, 118, 124, 95, 115, 121, 96, 116, 120, 122, 97, 117, 121, 123, 98, 118, 122, 124, 99, 119, 123 },
      /* areas   */ {0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 1.0, 0.05788845944824356, 0.05788845944824356, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.15735714739564882, 0.15735714739564882, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 0.42774107434374375, 0.42774107434374375, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 1.162720789674148, 1.162720789674148, 1.0, 1.0, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 1.0, 3.1606027941427888, 3.1606027941427888},
      /* n_bnd   */ {3, 2, 2, 2, 3, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 1, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 3, 2, 2, 2, 3 },
      /* volumes */ {0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.05788845944824356, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.15735714739564882, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 0.42774107434374375, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 1.162720789674148, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888, 3.1606027941427888},
      /* centers */ {{0.5, 0.5, 0.06263396471954912}, {1.5, 0.5, 0.06263396471954912}, {2.5, 0.5, 0.06263396471954912}, {3.5, 0.5, 0.06263396471954912}, {4.5, 0.5, 0.06263396471954912}, {0.5, 1.5, 0.06263396471954912}, {1.5, 1.5, 0.06263396471954912}, {2.5, 1.5, 0.06263396471954912}, {3.5, 1.5, 0.06263396471954912}, {4.5, 1.5, 0.06263396471954912}, {0.5, 2.5, 0.06263396471954912}, {1.5, 2.5, 0.06263396471954912}, {2.5, 2.5, 0.06263396471954912}, {3.5, 2.5, 0.06263396471954912}, {4.5, 2.5, 0.06263396471954912}, {0.5, 3.5, 0.06263396471954912}, {1.5, 3.5, 0.06263396471954912}, {2.5, 3.5, 0.06263396471954912}, {3.5, 3.5, 0.06263396471954912}, {4.5, 3.5, 0.06263396471954912}, {0.5, 4.5, 0.06263396471954912}, {1.5, 4.5, 0.06263396471954912}, {2.5, 4.5, 0.06263396471954912}, {3.5, 4.5, 0.06263396471954912}, {4.5, 4.5, 0.06263396471954912}, {0.5, 0.5, 0.1702567681414953}, {1.5, 0.5, 0.1702567681414953}, {2.5, 0.5, 0.1702567681414953}, {3.5, 0.5, 0.1702567681414953}, {4.5, 0.5, 0.1702567681414953}, {0.5, 1.5, 0.1702567681414953}, {1.5, 1.5, 0.1702567681414953}, {2.5, 1.5, 0.1702567681414953}, {3.5, 1.5, 0.1702567681414953}, {4.5, 1.5, 0.1702567681414953}, {0.5, 2.5, 0.1702567681414953}, {1.5, 2.5, 0.1702567681414953}, {2.5, 2.5, 0.1702567681414953}, {3.5, 2.5, 0.1702567681414953}, {4.5, 2.5, 0.1702567681414953}, {0.5, 3.5, 0.1702567681414953}, {1.5, 3.5, 0.1702567681414953}, {2.5, 3.5, 0.1702567681414953}, {3.5, 3.5, 0.1702567681414953}, {4.5, 3.5, 0.1702567681414953}, {0.5, 4.5, 0.1702567681414953}, {1.5, 4.5, 0.1702567681414953}, {2.5, 4.5, 0.1702567681414953}, {3.5, 4.5, 0.1702567681414953}, {4.5, 4.5, 0.1702567681414953}, {0.5, 0.5, 0.46280587901119163}, {1.5, 0.5, 0.46280587901119163}, {2.5, 0.5, 0.46280587901119163}, {3.5, 0.5, 0.46280587901119163}, {4.5, 0.5, 0.46280587901119163}, {0.5, 1.5, 0.46280587901119163}, {1.5, 1.5, 0.46280587901119163}, {2.5, 1.5, 0.46280587901119163}, {3.5, 1.5, 0.46280587901119163}, {4.5, 1.5, 0.46280587901119163}, {0.5, 2.5, 0.46280587901119163}, {1.5, 2.5, 0.46280587901119163}, {2.5, 2.5, 0.46280587901119163}, {3.5, 2.5, 0.46280587901119163}, {4.5, 2.5, 0.46280587901119163}, {0.5, 3.5, 0.46280587901119163}, {1.5, 3.5, 0.46280587901119163}, {2.5, 3.5, 0.46280587901119163}, {3.5, 3.5, 0.46280587901119163}, {4.5, 3.5, 0.46280587901119163}, {0.5, 4.5, 0.46280587901119163}, {1.5, 4.5, 0.46280587901119163}, {2.5, 4.5, 0.46280587901119163}, {3.5, 4.5, 0.46280587901119163}, {4.5, 4.5, 0.46280587901119163}, {0.5, 0.5, 1.2580368110201376}, {1.5, 0.5, 1.2580368110201376}, {2.5, 0.5, 1.2580368110201376}, {3.5, 0.5, 1.2580368110201376}, {4.5, 0.5, 1.2580368110201376}, {0.5, 1.5, 1.2580368110201376}, {1.5, 1.5, 1.2580368110201376}, {2.5, 1.5, 1.2580368110201376}, {3.5, 1.5, 1.2580368110201376}, {4.5, 1.5, 1.2580368110201376}, {0.5, 2.5, 1.2580368110201376}, {1.5, 2.5, 1.2580368110201376}, {2.5, 2.5, 1.2580368110201376}, {3.5, 2.5, 1.2580368110201376}, {4.5, 2.5, 1.2580368110201376}, {0.5, 3.5, 1.2580368110201376}, {1.5, 3.5, 1.2580368110201376}, {2.5, 3.5, 1.2580368110201376}, {3.5, 3.5, 1.2580368110201376}, {4.5, 3.5, 1.2580368110201376}, {0.5, 4.5, 1.2580368110201376}, {1.5, 4.5, 1.2580368110201376}, {2.5, 4.5, 1.2580368110201376}, {3.5, 4.5, 1.2580368110201376}, {4.5, 4.5, 1.2580368110201376}, {0.5, 0.5, 3.4196986029286056}, {1.5, 0.5, 3.4196986029286056}, {2.5, 0.5, 3.4196986029286056}, {3.5, 0.5, 3.4196986029286056}, {4.5, 0.5, 3.4196986029286056}, {0.5, 1.5, 3.4196986029286056}, {1.5, 1.5, 3.4196986029286056}, {2.5, 1.5, 3.4196986029286056}, {3.5, 1.5, 3.4196986029286056}, {4.5, 1.5, 3.4196986029286056}, {0.5, 2.5, 3.4196986029286056}, {1.5, 2.5, 3.4196986029286056}, {2.5, 2.5, 3.4196986029286056}, {3.5, 2.5, 3.4196986029286056}, {4.5, 2.5, 3.4196986029286056}, {0.5, 3.5, 3.4196986029286056}, {1.5, 3.5, 3.4196986029286056}, {2.5, 3.5, 3.4196986029286056}, {3.5, 3.5, 3.4196986029286056}, {4.5, 3.5, 3.4196986029286056}, {0.5, 4.5, 3.4196986029286056}, {1.5, 4.5, 3.4196986029286056}, {2.5, 4.5, 3.4196986029286056}, {3.5, 4.5, 3.4196986029286056}, {4.5, 4.5, 3.4196986029286056}}
      // clang-on
    ) {}
};

class DualGEx_aniso_3cell: public BaseDualGEx {
public:
    DualGEx_aniso_3cell() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 8, 11, 14, 17, 21, 25, 29, 33, 37, 40, 44, 48, 52, 56, 59, 63, 66, 69, 71, 74, 77, 80, 82, 85, 88, 90},
      /* col_ind */ {1, 11, 0, 2, 10, 1, 3, 9, 2, 4, 8, 3, 5, 7, 4, 24, 6, 5, 7, 25, 17, 4, 8, 6, 15, 3, 9, 7, 13, 2, 10, 8, 12, 1, 11, 9, 14, 0, 10, 16, 9, 14, 13, 23, 8, 12, 15, 21, 10, 16, 12, 22, 7, 13, 17, 19, 11, 14, 20, 6, 15, 26, 18, 17, 19, 27, 15, 21, 18, 16, 22, 13, 23, 19, 14, 20, 23, 12, 22, 21, 5, 25, 6, 24, 26, 17, 25, 27, 18, 26},
      /* areas   */ {1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 1.0, 0.2, 0.2, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2},
      /* volumes */ {0.20, 0.20, 0.20, 0.20, 0.20, 1.00, 1.00, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 1.00, 1.00, 0.20, 0.20, 0.20, 0.20, 0.20, 1.00, 1.00, 1.00, 1.00},
      /* centers */ {{0.5, 0.1}, {0.5, 0.3}, {0.5, 0.5}, {0.5, 0.7}, {0.5, 0.9}, {0.5, 1.5}, {1.5, 1.5},
                     {1.5, 0.9}, {1.5, 0.7}, {1.5, 0.5}, {1.5, 0.3}, {1.5, 0.1}, {2.5, 0.5}, {2.5, 0.7}, {2.5, 0.3}, {2.5, 0.9}, {2.5, 0.1},
                     {2.5, 1.5}, {3.5, 1.5}, {3.5, 0.9}, {3.5, 0.1}, {3.5, 0.7}, {3.5, 0.3}, {3.5, 0.5}, {0.5, 2.5}, {1.5, 2.5}, {2.5, 2.5}, {3.5, 2.5}}
      // clang-on
    ) {}
};

class DualGEx_minimal: public BaseDualGEx {
public:
    DualGEx_minimal() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 7, 10, 14, 17, 19, 22, 24},
      /* col_ind */ {1, 3, 0, 2, 4, 1, 5, 0, 4, 6, 1, 3, 5, 7, 2, 4, 8, 3, 7, 4, 6, 8, 5, 7},
      /* areas   */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {2, 1, 2, 1, 0, 1, 2, 1, 2},
      /* volumes */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* centers */ {{0.5, 0.5}, {1.5, 0.5}, {2.5, 0.5}, {0.5, 1.5}, {1.5, 1.5}, {2.5, 1.5}, {0.5, 2.5}, {1.5, 2.5}, {2.5, 2.5}}
      // clang-on
    ) {}
};

class DualGEx_quad_3: public BaseDualGEx {
public:
    DualGEx_quad_3() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 7, 10, 14, 17, 19, 22, 24},
      /* col_ind */ {1, 3, 0, 2, 4, 1, 5, 0, 4, 6, 1, 3, 5, 7, 2, 4, 8, 3, 7, 4, 6, 8, 5, 7},
      /* areas   */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {2, 1, 2, 1, 0, 1, 2, 1, 2},
      /* volumes */ {1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00},
      /* centers */ {{0.5, 0.5}, {1.5, 0.5}, {2.5, 0.5}, {0.5, 1.5}, {1.5, 1.5}, {2.5, 1.5}, {0.5, 2.5}, {1.5, 2.5}, {2.5, 2.5}}
      // clang-on
    ) {}
};

class DualGEx_quad_4: public BaseDualGEx {
public:
    DualGEx_quad_4() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 8, 10, 13, 17, 21, 24, 27, 31, 35, 38, 40, 43, 46, 48},
      /* col_ind */ {1, 4, 0, 2, 5, 1, 3, 6, 2, 7, 0, 5, 8, 1, 4, 6, 9, 2, 5, 7, 10, 3, 6, 11, 4, 9, 12, 5, 8, 10, 13, 6, 9, 11, 14, 7, 10, 15, 8, 13, 9, 12, 14, 10, 13, 15, 11, 14},
      /* areas   */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {2, 1, 1, 2, 1, 0, 0, 1, 1, 0, 0, 1, 2, 1, 1, 2},
      /* volumes */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* centers */ {{0.5, 0.5}, {1.5, 0.5}, {2.5, 0.5}, {3.5, 0.5}, {0.5, 1.5}, {1.5, 1.5}, {2.5, 1.5}, {3.5, 1.5}, {0.5, 2.5}, {1.5, 2.5}, {2.5, 2.5}, {3.5, 2.5}, {0.5, 3.5}, {1.5, 3.5}, {2.5, 3.5}, {3.5, 3.5}}
      // clang-on
    ) {}
};

class DualGEx_quad_7: public BaseDualGEx {
public:
    DualGEx_quad_7() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 8, 11, 14, 17, 19, 22, 26, 30, 34, 38, 42, 45, 48, 52, 56, 60, 64, 68, 71, 74, 78, 82, 86, 90, 94, 97, 100, 104, 108, 112, 116, 120, 123, 126, 130, 134, 138, 142, 146, 149, 151, 154, 157, 160, 163, 166, 168},
      /* col_ind */ {1, 7, 0, 2, 8, 1, 3, 9, 2, 4, 10, 3, 5, 11, 4, 6, 12, 5, 13, 0, 8, 14, 1, 7, 9, 15, 2, 8, 10, 16, 3, 9, 11, 17, 4, 10, 12, 18, 5, 11, 13, 19, 6, 12, 20, 7, 15, 21, 8, 14, 16, 22, 9, 15, 17, 23, 10, 16, 18, 24, 11, 17, 19, 25, 12, 18, 20, 26, 13, 19, 27, 14, 22, 28, 15, 21, 23, 29, 16, 22, 24, 30, 17, 23, 25, 31, 18, 24, 26, 32, 19, 25, 27, 33, 20, 26, 34, 21, 29, 35, 22, 28, 30, 36, 23, 29, 31, 37, 24, 30, 32, 38, 25, 31, 33, 39, 26, 32, 34, 40, 27, 33, 41, 28, 36, 42, 29, 35, 37, 43, 30, 36, 38, 44, 31, 37, 39, 45, 32, 38, 40, 46, 33, 39, 41, 47, 34, 40, 48, 35, 43, 36, 42, 44, 37, 43, 45, 38, 44, 46, 39, 45, 47, 40, 46, 48, 41, 47},
      /* areas   */ {1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00},
      /* n_bnd   */ {2, 1, 1, 1, 1, 1, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 2},
      /* volumes */ {1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00},
      /* centers */ {{0.5, 0.5}, {1.5, 0.5}, {2.5, 0.5}, {3.5, 0.5}, {4.5, 0.5}, {5.5, 0.5}, {6.5, 0.5},
                     {0.5, 1.5}, {1.5, 1.5}, {2.5, 1.5}, {3.5, 1.5}, {4.5, 1.5}, {5.5, 1.5}, {6.5, 1.5}, {0.5, 2.5}, {1.5, 2.5}, {2.5, 2.5},
                     {3.5, 2.5}, {4.5, 2.5}, {5.5, 2.5}, {6.5, 2.5}, {0.5, 3.5}, {1.5, 3.5}, {2.5, 3.5}, {3.5, 3.5}, {4.5, 3.5}, {5.5, 3.5},
                     {6.5, 3.5}, {0.5, 4.5}, {1.5, 4.5}, {2.5, 4.5}, {3.5, 4.5}, {4.5, 4.5}, {5.5, 4.5}, {6.5, 4.5}, {0.5, 5.5}, {1.5, 5.5},
                     {2.5, 5.5}, {3.5, 5.5}, {4.5, 5.5}, {5.5, 5.5}, {6.5, 5.5}, {0.5, 6.5}, {1.5, 6.5}, {2.5, 6.5}, {3.5, 6.5}, {4.5, 6.5},
                     {5.5, 6.5}, {6.5, 6.5}}
      // clang-on
    ) {}
};

class DualGEx_cube_4: public BaseDualGEx {
public:
    DualGEx_cube_4() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 3, 7, 11, 14, 18, 23, 28, 32, 36, 41, 46, 50, 53, 57, 61, 64, 68, 73, 78, 82, 87, 93, 99, 104, 109, 115, 121, 126, 130, 135, 140, 144, 148, 153, 158, 162, 167, 173, 179, 184, 189, 195, 201, 206, 210, 215, 220, 224, 227, 231, 235, 238, 242, 247, 252, 256, 260, 265, 270, 274, 277, 281, 285, 288},
      /* col_ind */ {1, 4, 16, 0, 2, 5, 17, 1, 3, 6, 18, 2, 7, 19, 0, 5, 8, 20, 1, 4, 6, 9, 21, 2, 5, 7, 10, 22, 3, 6, 11, 23, 4, 9, 12, 24, 5, 8, 10, 13, 25, 6, 9, 11, 14, 26, 7, 10, 15, 27, 8, 13, 28, 9, 12, 14, 29, 10, 13, 15, 30, 11, 14, 31, 0, 17, 20, 32, 1, 16, 18, 21, 33, 2, 17, 19, 22, 34, 3, 18, 23, 35, 4, 16, 21, 24, 36, 5, 17, 20, 22, 25, 37, 6, 18, 21, 23, 26, 38, 7, 19, 22, 27, 39, 8, 20, 25, 28, 40, 9, 21, 24, 26, 29, 41, 10, 22, 25, 27, 30, 42, 11, 23, 26, 31, 43, 12, 24, 29, 44, 13, 25, 28, 30, 45, 14, 26, 29, 31, 46, 15, 27, 30, 47, 16, 33, 36, 48, 17, 32, 34, 37, 49, 18, 33, 35, 38, 50, 19, 34, 39, 51, 20, 32, 37, 40, 52, 21, 33, 36, 38, 41, 53, 22, 34, 37, 39, 42, 54, 23, 35, 38, 43, 55, 24, 36, 41, 44, 56, 25, 37, 40, 42, 45, 57, 26, 38, 41, 43, 46, 58, 27, 39, 42, 47, 59, 28, 40, 45, 60, 29, 41, 44, 46, 61, 30, 42, 45, 47, 62, 31, 43, 46, 63, 32, 49, 52, 33, 48, 50, 53, 34, 49, 51, 54, 35, 50, 55, 36, 48, 53, 56, 37, 49, 52, 54, 57, 38, 50, 53, 55, 58, 39, 51, 54, 59, 40, 52, 57, 60, 41, 53, 56, 58, 61, 42, 54, 57, 59, 62, 43, 55, 58, 63, 44, 56, 61, 45, 57, 60, 62, 46, 58, 61, 63, 47, 59, 62},
      /* areas   */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {3, 2, 2, 3, 2, 1, 1, 2, 2, 1, 1, 2, 3, 2, 2, 3, 2, 1, 1, 2, 1, 0, 0, 1, 1, 0, 0, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 0, 0, 1, 1, 0, 0, 1, 2, 1, 1, 2, 3, 2, 2, 3, 2, 1, 1, 2, 2, 1, 1, 2, 3, 2, 2, 3},
      /* volumes */ {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
      /* centers */ {{0.5, 0.5, 0.5}, {1.5, 0.5, 0.5}, {2.5, 0.5, 0.5}, {3.5, 0.5, 0.5}, {0.5, 1.5, 0.5},
                     {1.5, 1.5, 0.5}, {2.5, 1.5, 0.5}, {3.5, 1.5, 0.5}, {0.5, 2.5, 0.5}, {1.5, 2.5, 0.5}, {2.5, 2.5, 0.5}, {3.5, 2.5, 0.5},
                     {0.5, 3.5, 0.5}, {1.5, 3.5, 0.5}, {2.5, 3.5, 0.5}, {3.5, 3.5, 0.5}, {0.5, 0.5, 1.5}, {1.5, 0.5, 1.5}, {2.5, 0.5, 1.5},
                     {3.5, 0.5, 1.5}, {0.5, 1.5, 1.5}, {1.5, 1.5, 1.5}, {2.5, 1.5, 1.5}, {3.5, 1.5, 1.5}, {0.5, 2.5, 1.5}, {1.5, 2.5, 1.5},
                     {2.5, 2.5, 1.5}, {3.5, 2.5, 1.5}, {0.5, 3.5, 1.5}, {1.5, 3.5, 1.5}, {2.5, 3.5, 1.5}, {3.5, 3.5, 1.5}, {0.5, 0.5, 2.5},
                     {1.5, 0.5, 2.5}, {2.5, 0.5, 2.5}, {3.5, 0.5, 2.5}, {0.5, 1.5, 2.5}, {1.5, 1.5, 2.5}, {2.5, 1.5, 2.5}, {3.5, 1.5, 2.5},
                     {0.5, 2.5, 2.5}, {1.5, 2.5, 2.5}, {2.5, 2.5, 2.5}, {3.5, 2.5, 2.5}, {0.5, 3.5, 2.5}, {1.5, 3.5, 2.5}, {2.5, 3.5, 2.5},
                     {3.5, 3.5, 2.5}, {0.5, 0.5, 3.5}, {1.5, 0.5, 3.5}, {2.5, 0.5, 3.5}, {3.5, 0.5, 3.5}, {0.5, 1.5, 3.5}, {1.5, 1.5, 3.5},
                     {2.5, 1.5, 3.5}, {3.5, 1.5, 3.5}, {0.5, 2.5, 3.5}, {1.5, 2.5, 3.5}, {2.5, 2.5, 3.5}, {3.5, 2.5, 3.5}, {0.5, 3.5, 3.5},
                     {1.5, 3.5, 3.5}, {2.5, 3.5, 3.5}, {3.5, 3.5, 3.5}}
      // clang-on
    ) {}
};

/** @brief 8 cells arranged in 2 rows used for testing correction */
class DualGEx_correction: public BaseDualGEx {
public:
    DualGEx_correction() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 8, 10, 12, 15, 18, 20},
      /* col_ind */ {1, 4, 0, 2, 5, 1, 3, 6, 2, 7, 0, 5, 1, 4, 6, 2, 5, 7, 3, 6},
      /* areas   */ {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {2, 1, 1, 2, 2, 1, 1, 2},
      /* volumes */ {1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00},
      /* centers */ {{0.5, 0.5}, {1.5, 0.5}, {2.5, 0.5}, {3.5, 0.5}, {0.5, 1.5}, {1.5, 1.5}, {2.5, 1.5}, {3.5, 1.5}}
      // clang-on
    ) {}
};

/** @brief Square mesh of quads with a hole inside. 3 layers of cells. Two corners are artificially created. See the
 * drawing
 **/
class DualGEx_hole_w_corners: public BaseDualGEx {
public:
    DualGEx_hole_w_corners() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 3, 6, 9, 12, 16, 20, 24, 28, 31, 34, 37, 40, 42, 44},
      /* col_ind */ {4, 12, 13, 2, 5, 13, 1, 3, 6, 2, 7, 12, 0, 7, 5, 8, 1, 4, 6, 9, 2, 5, 7, 10, 3, 4, 6, 11, 4, 11, 9, 5, 8, 10, 6, 9, 11, 7, 8, 10, 0, 3, 0, 1},
      /* areas   */ {6.0, 1.0, 1.0, 1.4142135623730951, 6.0, 1.0, 1.4142135623730951, 1.4142135623730951, 6.0, 1.4142135623730951, 6.0, 1.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 4.0, 1.4142135623730951, 1.4142135623730951, 4.0, 1.4142135623730951, 1.4142135623730951, 4.0, 1.4142135623730951, 1.4142135623730951, 4.0, 1.4142135623730951, 1.4142135623730951, 1.0, 1.0, 1.0, 1.0},
      /* n_bnd   */ {1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2},
      /* volumes */ {6.00, 6.50, 7.00, 6.50, 5.00, 5.00, 5.00, 5.00, 3.00, 3.00, 3.00, 3.00, 1.00, 1.00},
      /* centers */ {{3.5, 0.0}, {-0.25, 3.5}, {-3.5, 0.0}, {-0.25, -3.5}, {2.5, 0.0}, {0.0, 2.5}, {-2.5, 0.0},
                     {0.0, -2.5}, {1.5, 0.0}, {0.0, 1.5}, {-1.5, 0.0}, {0.0, -1.5}, {3.5, -3.5}, {3.5, 3.5}}
      // clang-on
    ) {}
};

/** @brief Square mesh of quads with a hole inside. 3 layers of cells. Similar to the one above but without corners */
class DualGEx_hole_no_corners : public BaseDualGEx {
public:
    DualGEx_hole_no_corners() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 3, 6, 9, 12, 16, 20, 24, 28, 31, 34, 37, 40},
      /* col_ind */ {3, 1, 4, 0, 2, 5, 1, 3, 6, 0, 2, 7, 0, 7, 5, 8, 1, 4, 6, 9, 2, 5, 7, 10, 3, 4, 6, 11, 4, 11, 9, 5, 8, 10, 6, 9, 11, 7, 8, 10},
      /* areas   */ {1.4142135623730951, 1.4142135623730951, 6.0, 1.4142135623730951, 1.4142135623730951, 6.0, 1.4142135623730951, 1.4142135623730951, 6.0, 1.4142135623730951, 1.4142135623730951, 6.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 6.0, 1.4142135623730951, 1.4142135623730951, 4.0, 4.0, 1.4142135623730951, 1.4142135623730951, 4.0, 1.4142135623730951, 1.4142135623730951, 4.0, 1.4142135623730951, 1.4142135623730951, 4.0, 1.4142135623730951, 1.4142135623730951},
      /* n_bnd   */ {1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1},
      /* volumes */ {7.00, 7.00, 7.00, 7.00, 5.00, 5.00, 5.00, 5.00, 3.00, 3.00, 3.00, 3.00},
      /* centers */ {{3.5, 0.0}, {0.0, 3.5}, {-3.5, 0.0}, {0.0, -3.5}, {2.5, 0.0}, {0.0, 2.5}, {-2.5, 0.0},
                     {0.0, -2.5}, {1.5, 0.0}, {0.0, 1.5}, {-1.5, 0.0}, {0.0, -1.5}}
      // clang-on
    ) {}
};

/** @brief 6 slightly stretched (x1.75) rectangles arranged in 2 rows used for testing iterative FC choice */
class DualGEx_T_shaped : public BaseDualGEx {
public:
    DualGEx_T_shaped() : BaseDualGEx(
      // clang-format off
      /* row_ptr */ {0, 2, 5, 7, 9, 12, 14},
      /* col_ind */ {1, 3, 0, 2, 4, 1, 5, 0, 4, 1, 3, 5, 2, 4},
      /* areas   */ {1.75, 1.0, 1.75, 1.75, 1.0, 1.75, 1.0, 1.0, 1.75, 1.0, 1.75, 1.75, 1.0, 1.75},
      /* n_bnd   */ {2, 1, 2, 2, 1, 2},
      /* volumes */ {1.75, 1.75, 1.75, 1.75, 1.75, 1.75},
      /* centers */ {{0.5, 0.875}, {1.5, 0.875}, {2.5, 0.875}, {0.5, 2.625}, {1.5, 2.625}, {2.5, 2.625}}
      // clang-on
    ) {}
};

#endif
